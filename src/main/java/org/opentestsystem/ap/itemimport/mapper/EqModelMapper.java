package org.opentestsystem.ap.itemimport.mapper;

import lombok.NoArgsConstructor;
import org.opentestsystem.ap.common.model.EqItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemContext;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.itemimport.model.IatMappingResult;

@NoArgsConstructor
public class EqModelMapper extends IatModelMapper {
    @Override
    Item mapContent(Item item, ItemRelease release, ItemContext itemContext, String itemSourceFullPath) {
        EqItem eqItem = (EqItem) item;
        String itemDestinationFullPath = itemContext.getLocalRepositoryPath().toString();

        IatMappingResult mappingResult = new IatMappingResult();
        for (ItemRelease.Item.Content content : release.getItem().getContent()) {
            // Call main IAT mapping function
            mappingResult = mapRichTextContent(content, mappingResult);

            // Assign prompt
            if (content.getLanguage().equals("ENU")) {
                eqItem.getCore().getEn().setPrompt(mappingResult.getContent());

            } else if (content.getLanguage().equals("ESN")) {
                eqItem.getTranslations().getEsp().setPrompt(mappingResult.getContent());

            }

            // Process attachments
            processAttachments(content, eqItem, itemSourceFullPath, itemDestinationFullPath);
        }

        //eqItem.getCore().getEquationEditorConfiguration().get

        //Process Audio Resources
        processAudioResources(mappingResult, eqItem, itemSourceFullPath, itemDestinationFullPath);

        //Process Image Resources
        processImageResources(mappingResult, eqItem, itemSourceFullPath, itemDestinationFullPath);

        return eqItem;
    }
}
