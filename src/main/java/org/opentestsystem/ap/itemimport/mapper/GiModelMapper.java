package org.opentestsystem.ap.itemimport.mapper;

import lombok.NoArgsConstructor;
import org.opentestsystem.ap.common.model.GiItem;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemContext;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.itemimport.model.IatMappingResult;

@NoArgsConstructor
public class GiModelMapper extends IatModelMapper {
    @Override
    Item mapContent(Item item, ItemRelease release, ItemContext itemContext, String itemSourceFullPath) {
        GiItem giItem = (GiItem) item;
        String itemDestinationFullPath = itemContext.getLocalRepositoryPath().toString();

        IatMappingResult mappingResult = new IatMappingResult();
        for (ItemRelease.Item.Content content : release.getItem().getContent()) {
            // Call main IAT mapping function
            mappingResult = mapRichTextContent(content, mappingResult);

            // Assign prompt
            if (content.getLanguage().equals("ENU")) {
                giItem.getCore().getEn().setPrompt(mappingResult.getContent());

            } else if (content.getLanguage().equals("ESN")) {
                giItem.getTranslations().getEsp().setPrompt(mappingResult.getContent());

            }

            // Process attachments
            processAttachments(content, giItem, itemSourceFullPath, itemDestinationFullPath);
        }

        //Process Audio Resources
        processAudioResources(mappingResult, giItem, itemSourceFullPath, itemDestinationFullPath);

        //Process Image Resources
        processImageResources(mappingResult, giItem, itemSourceFullPath, itemDestinationFullPath);

        return giItem;
    }

}
