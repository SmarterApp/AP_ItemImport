package org.opentestsystem.ap.itemimport.mapper;

import org.apache.commons.lang3.StringUtils;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemContext;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.common.saaif.metadata.SmarterAppMetadata;
import org.opentestsystem.ap.itemimport.model.IATMappingResult;
import org.opentestsystem.ap.itemimport.util.ItemFileUtil;

public class SaModelMapper extends IatModelMapper {

    @Override
    Item mapContent(Item item, ItemRelease release, ItemContext itemContext, String itemSourceFullPath) {
        SaItem saItem = (SaItem) item;
        String itemDestinationFullPath = itemContext.getLocalRepositoryPath().toString();

        IATMappingResult mappingResult = new IATMappingResult();
        for (ItemRelease.Item.Content content : release.getItem().getContent()) {
            // Call main IAT mapping function
            mappingResult = mapRichTextContent(content, mappingResult);

            if (content.getLanguage().equals("ENU")) {
                saItem.getCore().getEn().setPrompt(mappingResult.getContent());
            } else if (content.getLanguage().equals("ESN")) {
                saItem.getTranslations().getEsp().setPrompt(mappingResult.getContent());
            }

            // Process attachments
            if (content.getAttachmentlist() != null) {
                for (ItemRelease.Item.Content.Attachmentlist.Attachment attachment :
                        content.getAttachmentlist().getAttachment()) {
                    // TODO: Refactor logic below
                    if (attachment.getType().equals("ASL")) {
                        saItem.getAsl().getAttachments().add(createAttachment(attachment.getFile()));
                        ItemFileUtil.copyFile(itemSourceFullPath + "/" + attachment.getFile(),
                                itemDestinationFullPath + "/" + attachment.getFile());
                    } else if (attachment.getType().equals("BRF") || attachment.getType().equals("PRN")) {
                        saItem.getBraille().getAttachments().add(createAttachment(attachment.getFile()));
                        ItemFileUtil.copyFile(itemSourceFullPath + "/" + attachment.getFile(),
                                itemDestinationFullPath + "/" + attachment.getFile());
                    }
                }
            }
        }

        //Process Audio Resources
        mappingResult.getAudioList().forEach(audio -> {
            saItem.getAudio().getAudioResources().add(createItemAudioResource(audio, audio.getAudioId()));
            audio.getSources().forEach(source -> {
                ItemFileUtil.copyFile(itemSourceFullPath + "/" + source,
                        itemDestinationFullPath + "/" + source);
            });
            if (StringUtils.isNotBlank(audio.getTrack())) {
                saItem.getCc().getAttachments().add(createAttachment(audio.getTrack()));
                saItem.getCc().getItemCcAudioAssociations().add(createItemCCAudioAssociation(audio.getTrack(), audio.getAudioId()));
                ItemFileUtil.copyFile(itemSourceFullPath + "/" + audio.getTrack(),
                        itemDestinationFullPath + "/" + audio.getTrack());
            }
        });

        //Process Image Resources
        mappingResult.getImageList().forEach(image -> {
            //int imageId = resourceId.getAndIncrement();
            saItem.getImages().getImageResources().add(createItemImageResource(image.getSource(), image.getImageId()));
            ItemFileUtil.copyFile(itemSourceFullPath + "/" + image,
                    itemDestinationFullPath + "/" + image);
        });

        return saItem;
    }

    @Override
    Item mapMetadata(Item item, SmarterAppMetadata metadata) {
        SaItem saItem = (SaItem) item;
        saItem.getCore().setMetadata(mapItemMetadata(metadata));
        return saItem;
    }

    @Override
    Item mapAssociatedPassage(Item item, ItemRelease release) {
        SaItem saItem = (SaItem) item;
        if (StringUtils.isNotBlank(release.getItem().getAssociatedpassage())) {
            //TODO: check if stimulus exists in item bank?
            saItem.getCore().setStimulusId(release.getItem().getAssociatedpassage());
        }
        return item;
    }

    @Override
    Item mapTutorial(Item item, ItemRelease release) {
        SaItem saItem = (SaItem) item;

        if (StringUtils.isNotBlank(release.getItem().getTutorial().getId())) {
            //TODO: check if turorial exists in item bank?
            saItem.getCore().setTutorialId(release.getItem().getTutorial().getId());
        }

        return item;
    }
}
