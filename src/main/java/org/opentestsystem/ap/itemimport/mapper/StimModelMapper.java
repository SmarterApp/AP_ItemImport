package org.opentestsystem.ap.itemimport.mapper;

import lombok.NoArgsConstructor;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemContext;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.common.saaif.metadata.SmarterAppMetadata;
import org.opentestsystem.ap.itemimport.model.IatMappingResult;
import org.opentestsystem.ap.itemimport.model.ItemProps;
import org.opentestsystem.ap.itemimport.model.report.ImportResult;

@NoArgsConstructor
public class StimModelMapper extends IatModelMapper {

    @Override
    Item mapContent(Item item,
                    ItemRelease release,
                    ItemContext itemContext,
                    String itemSourceFullPath,
                    ImportResult importResult) {
        StimItem stimItem = (StimItem) item;
        String itemDestinationFullPath = itemContext.getLocalRepositoryPath().toString();

        IatMappingResult mappingResult = new IatMappingResult();
        for (ItemRelease.Passage.Content content : release.getPassage().getContent()) {
            // Call main IAT mapping function
            mappingResult = mapRichTextContent(content.getStem(), content.getApipAccessibility(), mappingResult);

            if (content.getLanguage().equals("ENU")) {
                stimItem.getCore().getEn().setContent(mappingResult.getContent());
            } else if (content.getLanguage().equals("ESN")) {
                stimItem.getTranslations().getEsp().setContent(mappingResult.getContent());
            }

            // Process attachments
            processAttachments(content, stimItem, itemSourceFullPath, itemDestinationFullPath, importResult);
        }

        //Process Audio Resources
        processAudioResources(mappingResult, stimItem, itemSourceFullPath, itemDestinationFullPath, importResult);

        //Process Image Resources
        processImageResources(mappingResult, stimItem, itemSourceFullPath, itemDestinationFullPath, importResult);

        return stimItem;
    }

    @Override
    public Item mapMetadata(Item item, SmarterAppMetadata metadata) {
        StimItem stimItem = (StimItem) item;
        stimItem.getCore().setMetadata(mapItemMetadata(metadata));
        return stimItem;
    }

    @Override
    Item mapAssociatedPassage(Item item, ItemProps itemProps) {
        return item;
    }

    @Override
    Item mapTutorial(Item item, ItemProps itemProps) {
        return item;
    }
}
