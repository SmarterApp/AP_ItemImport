package org.opentestsystem.ap.itemimport.mapper;

import org.apache.commons.io.FileUtils;
import org.opentestsystem.ap.common.model.Attachment;
import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemContext;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.common.saaif.metadata.SmarterAppMetadata;

import java.io.File;
import java.util.Date;

public class StimModelMapper extends IatModelMapper {

    @Override
    public Item mapContent(Item item, ItemRelease release, ItemContext itemContext, String itemDirFullPath) {
        StimItem stimItem = (StimItem) item;

        release.getPassage().getContent().forEach(content -> {
            //
            if (content.getLanguage().equals("ENU")) {
                stimItem.getCore().getEn().setContent(
                        mapRichTextContent(content.getStem(), content.getApipAccessibility()));
            } else if (content.getLanguage().equals("ESN")) {
                stimItem.getTranslations().getEsp().setContent(
                        mapRichTextContent(content.getStem(), content.getApipAccessibility()));
            }

            // Process ASL files
            content.getAttachmentlist().getAttachment().forEach(attachment -> {
                if (attachment.getType().equals("ASL")) {
                    Attachment att = new Attachment();
                    att.setFileName(attachment.getFile());
                    att.setUploadedDate(new Date());
                    att.setSection("asl");
                    stimItem.getAsl().getAttachments().add(att);
                }
                try {
                    // Copy ASL file to item repository directory to be included in commit
                    File source = new File(itemDirFullPath + "/" + attachment.getFile());
                    File dest = new File(itemContext.getLocalRepositoryPath().toString() + "/" + attachment.getFile());
                    FileUtils.copyFile(source, dest);
                } catch(Exception ex) {
                    // Log file not copied
                }
            });
            // TODO: Process braille files
            // TODO: Process image files
            // TODO: Process audio files
        });

        return stimItem;
    }

    @Override
    public Item mapMetadata(Item item, SmarterAppMetadata metadata) {
        StimItem stimItem = (StimItem) item;

        stimItem.getCore().setMetadata(
                mapItemMetadata(stimItem.getCore().getMetadata(), metadata));

        return stimItem;
    }
}
