package org.opentestsystem.ap.itemimport.mapper;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.ItemConstants;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;

public class StimModelMapper extends IATModelMapper{

    @Override
    Item mapContent(Item item, ItemRelease release) {
        StimItem stimItem = (StimItem) item;

        release.getPassage().getContent().forEach(content -> {
            if (content.getLanguage().equals("ENU")) {
                stimItem.getCore().getEn().setContent(updateTTSTags(content.getStem()));
            } else if (content.getLanguage().equals("ESN")) {
                stimItem.getTranslations().getEsp().setContent(updateTTSTags(content.getStem()));
            }
        });

        return stimItem;
    }

    @Override
    Item mapAttributes(Item item, ItemRelease release) {
        StimItem stimItem = (StimItem) item;

        ItemRelease.Passage.Attriblist.Attrib descAttrib = release.getPassage()
                .getAttriblist().getAttrib().stream()
                .filter(attrib -> attrib.getAttid().equals("stm_pass_desc"))
                .findAny()
                .orElse(null);

        if (descAttrib != null) {
            stimItem.saaifMapper().addUpdateOrRemoveAttribute(
                    release.getPassage().getAttriblist(),
                    ItemConstants.ItemAttribute.StimPassDesc,
                    descAttrib.getVal(),
                    stimItem.getSupplier());
        }

        return stimItem;
    }
}
