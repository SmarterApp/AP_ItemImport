package org.opentestsystem.ap.itemimport.mapper;

import org.apache.commons.lang3.RandomStringUtils;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.opentestsystem.ap.common.model.HtqsItem;
import org.opentestsystem.ap.common.saaif.item.ItemRelease;
import org.opentestsystem.ap.common.saaif.mapper.HtqsModelMapper;
import org.opentestsystem.ap.common.saaif.model.ItemMappingResult;
import org.opentestsystem.ap.itemimport.util.ImportFileUtil;

import java.io.File;
import java.nio.file.Path;

@RunWith(JUnit4.class)
public class HtqsModelMapperTest extends BaseModelMapperTest {
    private static final String ITEM_ID = "97933";

    private HtqsModelMapper htqsModelMapper = new HtqsModelMapper();

    @Before
    public void setup() {
        this.setupMapper();
    }

    @Test
    public void itShouldMapHtqsModel() {
        final Path localTempRepositoryPath = ImportFileUtil.generateLocalItemPath(
                localBaseDir.toString(), RandomStringUtils.randomAlphabetic(8), ITEM_ID);

        ItemMappingResult importResult = new ItemMappingResult();

        final String XML_FILE = "mapper/htqs-item.xml";

        final File itemFile = new File(getClass().getClassLoader()
                .getResource(XML_FILE).getFile());

        HtqsItem htqsItem = new HtqsItem(ITEM_ID);
        final ItemRelease itemRelease = this.appAssembler.getSaaifAssembler()
                .readXmlFromFile(itemFile.toPath());

        HtqsItem item = (HtqsItem) htqsModelMapper
                .mapContent(htqsItem, itemRelease, localTempRepositoryPath, localBaseDir.toString(),  importResult);

        Assert.assertTrue(item.getCore().getEn().getPrompt().length() > 0);
        Assert.assertTrue(item.getCore().getEn().getHtqSelectable().getInteractiveText().length() > 0);
    }

}